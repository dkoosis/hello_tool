steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'
  - '.'
  id: 'Build Docker Image'

# Push the container image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest' ]
  id: 'Push to Artifact Registry'

# Deploy container image to Cloud Run
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:latest'
  entrypoint: gcloud
  args:
  - 'run'
  - 'deploy'
  - '${_SERVICE_NAME}'
  - '--image'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'
  - '--region'
  - '${_REGION}'
  - '--platform'
  - 'managed'
  - '--ingress=all'
  - '--allow-unauthenticated'
  - '--project=$PROJECT_ID'
  id: 'Deploy to Cloud Run'

# Add a small delay before tagging, just in case of API propagation
- name: 'alpine'
  args: [ 'sleep', '10' ]
  id: 'Wait Before Tagging'

# (Optional) Tag the image with the commit SHA for versioning
- name: 'gcr.io/google.com/cloudsdktool/google-cloud-cli:latest'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    # Use SHORT_SHA if available, otherwise use 'manual-build' as a fallback tag
    TAG_NAME="${SHORT_SHA:-manual-build}"
    echo "Attempting to tag image with: $${TAG_NAME}"
    gcloud artifacts docker tags add \
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest' \
      '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$${TAG_NAME}' \
      --project=$PROJECT_ID || echo "Tagging failed, continuing build."
  id: 'Tag Image'
  # Allow this step to fail without failing the entire build if tagging is non-critical
  # allowFailure: true


  # Store images in Artifact Registry
images:
- '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:latest'
# Also list the tagged image if you want it explicitly managed by Cloud Build artifacts
# - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:${SHORT_SHA:-manual-build}'


substitutions:
  _SERVICE_NAME: 'hello-tool-base'
  _REGION: 'us-central1'
  _ARTIFACT_REGISTRY_REPO: 'my-go-apps'
  # SHORT_SHA is a built-in substitution provided by Cloud Build if Git context is available.
  # If running 'gcloud builds submit .' from a directory without .git, SHORT_SHA might be empty.

options:
  logging: CLOUD_LOGGING_ONLY
