version: "3"

vars:
  SERVICE_NAME: hello-tool-base
  BINARY_NAME: "{{.SERVICE_NAME}}"
  MODULE_PATH: github.com/dkoosis/hello-tool-base
  CMD_PATH: ./cmd/{{.SERVICE_NAME}}
  SCRIPT_DIR: ./scripts

  VERSION:
    sh: git describe --tags --always --dirty --match=v* 2>/dev/null || echo "dev"
  COMMIT_HASH:
    sh: git rev-parse --short HEAD 2>/dev/null || echo "unknown"
  BUILD_DATE:
    sh: date -u '+%Y-%m-%dT%H:%M:%SZ'

  LDFLAGS: "-s -w -X {{.MODULE_PATH}}/internal/buildinfo.Version={{.VERSION}} -X {{.MODULE_PATH}}/internal/buildinfo.CommitHash={{.COMMIT_HASH}} -X {{.MODULE_PATH}}/internal/buildinfo.BuildDate={{.BUILD_DATE}}"

  GOLANGCILINT_VERSION: latest
  GOTESTSUM_VERSION: latest
  WARN_LINES: 350
  FAIL_LINES: 1500

env:
  CGO_ENABLED: 0

output: prefixed

tasks:
  default:
    cmds:
      - task: all

  all:
    cmds:
      - task: check-gomod
      - task: modt
      - task: fmt
      - task: lint
      - task: check-line-length
      - task: test
      - task: build
      - echo "All tasks completed successfully"

  build:
    cmds:
      - GOOS=linux GOARCH=amd64 go build -ldflags="{{.LDFLAGS}}" -o {{.BINARY_NAME}} {{.CMD_PATH}}

  clean:
    cmds:
      - rm -f {{.BINARY_NAME}} coverage.out
      - go clean -cache -testcache

  modt:
    cmds:
      - go mod tidy -v
      - go mod download

  test:
    cmds:
      - task: install-tools
      - gotestsum --format testdox -- -race -coverprofile=coverage.out -covermode=atomic ./...

  test-debug:
    env:
      LOG_LEVEL: debug
    cmds:
      - task: install-tools
      - go test -v -race -count=1 -coverprofile=coverage.out ./...

  fmt:
    cmds:
      - task: install-tools
      - golangci-lint fmt ./...
      - go mod tidy -v

  lint:
    cmds:
      - task: install-tools
      - golangci-lint run ./...

  check-gomod:
    cmds:
      - "{{.SCRIPT_DIR}}/check_go_mod_path.sh {{.MODULE_PATH}}"

  check-line-length:
    cmds:
      - '{{.SCRIPT_DIR}}/check_file_length.sh {{.WARN_LINES}} {{.FAIL_LINES}} $(find . -name "*.go" -not -path "./vendor/*" -not -path "./.git/*") || true'

  check-vulns:
    cmds:
      - |
        if ! command -v govulncheck >/dev/null 2>&1; then
          go install golang.org/x/vuln/cmd/govulncheck@latest
        fi
        govulncheck ./...

  install-tools:
    cmds:
      - |
        if ! command -v golangci-lint >/dev/null 2>&1; then
          echo "Installing golangci-lint@{{.GOLANGCILINT_VERSION}}..."
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@{{.GOLANGCILINT_VERSION}}
        fi
      - |
        if ! command -v gotestsum >/dev/null 2>&1; then
          echo "Installing gotestsum@{{.GOTESTSUM_VERSION}}..."
          go install gotest.tools/gotestsum@{{.GOTESTSUM_VERSION}}
        fi
